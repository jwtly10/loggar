name: Deploy Loggar To DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set Up Java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring Boot App
        run: |
            mvn clean install -P prod -Dmaven.test.skip 

      - name: Upload java artifacts to remote
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          password: ${{ secrets.PASSWORD }}
          source: "target/*.jar"
          target: "/opt/loggar"
          
      - name: Upload dockerfiles to remote
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          password: ${{ secrets.PASSWORD }}
          source: "Dockerfile, docker-compose.yml"
          target: "/opt/loggar"
        
      - name: Upload Redis dockerfiles to remote
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          password: ${{ secrets.PASSWORD }}
          source: "redis/Dockerfile"
          target: "/opt/loggar"

      - name: Run docker-compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          script: |
            cd /opt/loggar &&
            SPRING_REDIS_HOST=${{ secrets.SPRING_REDIS_HOST }} \
            SPRING_REDIS_CHANNEL=${{ secrets.SPRING_REDIS_CHANNEL }} \
            ELASTIC_CLOUD_ID=${{ secrets.ELASTIC_CLOUD_ID }} \
            ELASTIC_CLOUD_API_KEY=${{ secrets.ELASTIC_CLOUD_API_KEY }} \
            ELASTIC_CLOUD_URL=${{ secrets.ELASTIC_CLOUD_URL }} \
            ELASTIC_INDEX_NAME=${{ secrets.ELASTIC_INDEX_NAME }} \
            LOGGAR_SECURITY_CLIENTS=${{ secrets.LOGGAR_SECURITY_CLIENTS }} \
            LOGGAR_SECURITY_KEY=${{ secrets.LOGGAR_SECURITY_KEY }} \
            docker-compose up -d --build
